{
    "queries": {
        "SomaTotalVendendores": "\nCREATE TEMPORARY VIEW vendedores AS\n    SELECT OS.seller_state, COUNT(OS.seller_state) AS quantidade_vendedores \n    FROM olist_seller AS OS \n    GROUP BY OS.seller_state\n    ORDER BY quantidade_vendedores DESC\n",
        "SomaTotalVendendoresAgrupamendo": "\nWITH soma AS (\n    SELECT CAST(SUM(ve.quantidade_vendedores) AS INTEGER) AS total\n    FROM vendedores AS ve\n    WHERE ve.quantidade_vendedores < 20\n)\nSELECT DISTINCT\n    CASE \n        WHEN v.quantidade_vendedores < 20 THEN s.total\n        ELSE v.quantidade_vendedores\n    END AS quantidade_vendedores,\n    CASE\n        WHEN CAST(\n            CASE \n                WHEN v.quantidade_vendedores < 20 THEN s.total\n                ELSE v.quantidade_vendedores\n            END AS INTEGER) = 70 THEN (\n                SELECT string_agg(seller_state, ', ') \n                FROM vendedores\n                WHERE quantidade_vendedores < 20 \n            )\n        ELSE v.seller_state\n    END AS todos_estados,\n    CASE\n        WHEN CAST(\n            CASE \n                WHEN v.quantidade_vendedores < 20 THEN s.total\n                ELSE v.quantidade_vendedores\n            END AS INTEGER) = 70 THEN 'Outros estados'\n        ELSE v.seller_state\n    END AS estados\nFROM vendedores v\nCROSS JOIN soma s\n",
        "receitaTotalNosAnos": "\nselect date_part('year', DATE(oli.shipping_limit_date)) AS ano , SUM(oop.payment_value) AS receita from olist_order AS olo\n    INNER JOIN olist_order_items AS oli\n        ON oli.order_id = olo.order_id\n    INNER JOIN olist_order_payments AS oop \n        ON oop.order_id = olo.order_id\n    WHERE olo.status_ = 'ok'\n        GROUP BY ano LIMIT 3;\n",
        "receitaTotal": "\nselect SUM(oop.payment_value) AS receita from olist_order AS olo\n    INNER JOIN olist_order_items AS oli\n        ON oli.order_id = olo.order_id\n    INNER JOIN olist_order_payments AS oop \n        ON oop.order_id = olo.order_id\n    WHERE olo.status_ = 'ok';\n",
        "produtoMaisVendido": "\nSELECT op.product_category_name FROM olist_order AS olo \n    INNER JOIN olist_order_items AS oli\n        ON oli.order_id = olo.order_id\n    INNER JOIN olist_products AS op\n        ON op.product_id = oli.product_id\n    WHERE olo.status_ = 'ok'\n        GROUP BY product_category_name\n            ORDER BY  count(op.product_category_name) DESC LIMIT 1;\n",
        "estadoComMaisVendedores": "\nSELECT ols.seller_state, count(ols.seller_state) \n    FROM olist_seller AS ols \n    GROUP BY ols.seller_state\n        ORDER BY count DESC LIMIT 1;\n",
        "estadoComMaisCliente": "\nSELECT olc.customer_state, count(olc.customer_state) \n    FROM olist_customers AS olc\n        GROUP BY olc.customer_state\n    ORDER BY count DESC LIMIT 1;\n",
        "seriesHistoricaPedidos": "\nSELECT data_, count(data_) FROM(\n    SELECT DATE(olo.order_purchase_timestamp) AS data_ FROM olist_order olo\n        WHERE olo.status_='ok' \n    )\n    GROUP BY data_ \n    ORDER BY data_ ASC;\n",
        "receitaCategoria": "\nWITH receita AS(\n    SELECT order_id, sum(payment_value) AS result_ FROM olist_order_payments\n    GROUP BY order_id\n)\nSELECT opp.product_category_name, SUM(result_) AS tota_receita FROM olist_order AS olo \n    INNER JOIN receita AS olp \n        ON olo.order_id = olp.order_id\n    INNER JOIN olist_order_items AS oli \n        ON oli.order_id = olp.order_id\n    INNER JOIN olist_products AS opp \n        ON oli.product_id = opp.product_id\n    WHERE olo.status_='ok' AND\n        date_part('year', olo.order_purchase_timestamp) >= 2016 AND\n        date_part('year', olo.order_purchase_timestamp) <= 2018\n    GROUP BY opp.product_category_name  \n    ORDER BY tota_receita DESC LIMIT 10;\n"
    }
}