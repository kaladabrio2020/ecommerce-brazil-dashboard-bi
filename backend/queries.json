{
    "queries": {
        "SomaTotalVendendores": "\nCREATE TEMPORARY VIEW vendedores AS\n    SELECT OS.seller_state, COUNT(OS.seller_state) AS quantidade_vendedores \n    FROM olist_seller AS OS \n    GROUP BY OS.seller_state\n    ORDER BY quantidade_vendedores DESC\n",
        "SomaTotalVendendoresAgrupamendo": "\nWITH soma AS (\n    SELECT CAST(SUM(ve.quantidade_vendedores) AS INTEGER) AS total\n    FROM vendedores AS ve\n    WHERE ve.quantidade_vendedores < 20\n)\nSELECT DISTINCT\n    CASE \n        WHEN v.quantidade_vendedores < 20 THEN s.total\n        ELSE v.quantidade_vendedores\n    END AS quantidade_vendedores,\n    CASE\n        WHEN CAST(\n            CASE \n                WHEN v.quantidade_vendedores < 20 THEN s.total\n                ELSE v.quantidade_vendedores\n            END AS INTEGER) = 70 THEN (\n                SELECT string_agg(seller_state, ', ') \n                FROM vendedores\n                WHERE quantidade_vendedores < 20 \n            )\n        ELSE v.seller_state\n    END AS todos_estados,\n    CASE\n        WHEN CAST(\n            CASE \n                WHEN v.quantidade_vendedores < 20 THEN s.total\n                ELSE v.quantidade_vendedores\n            END AS INTEGER) = 70 THEN 'Outros estados'\n        ELSE v.seller_state\n    END AS estados\nFROM vendedores v\nCROSS JOIN soma s\n",
        "receitaTotalNosAnos": "\nselect date_part('year', DATE(oli.shipping_limit_date)) AS ano , SUM(oop.payment_value) AS receita from olist_order AS olo\n    INNER JOIN olist_order_items AS oli\n        ON oli.order_id = olo.order_id\n    INNER JOIN olist_order_payments AS oop \n        ON oop.order_id = olo.order_id\n    WHERE olo.status_ = 'ok'\n        GROUP BY ano LIMIT 3;\n"
    }
}